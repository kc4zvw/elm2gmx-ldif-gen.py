#!/usr/local/bin/python3 -u

###----------------------------------------------------------------###
#
#    Author : David Billsbrough <billsbrough@gmail.com>
#   Created : Friday, April 15, 2022 at 12:53:44 PM (EDT)
#   License : GNU General Public License - version 2
#   Version : $Revision: 0.13 $
#  Warranty : None
#
#   Purpose : Convert an Elm address book for use with
#           :  GMX.com contact book lists.
#
#  $Id: elm2gmx-ldif-gen.py,v 0.13 2022/04/15 16:59:42 kc4zvw Exp kc4zvw $
#
###----------------------------------------------------------------###

import os, string, time

def get_home_dir():
	myHOME = os.environ["HOME"]
	print("My $HOME directory is %s.\n" % myHOME)
	return myHOME

def get_timestamp():
	# return local date in format of "2020-01-28T03:19:32"
	timetuple = time.localtime(time.time())
	#return time.strftime("%Y-%m-%dT%H:%M:%S", timetuple)
	return time.strftime("%s", timetuple)

def delete_comment(name, pos):
	return name[0:pos]

def get_firstname(name, pos):
	return name[pos+2:]

def get_lastname(name, pos):
	return name[0:pos]

def get_fullname(first_name, last_name):
	full_name = ' '.join((first_name, last_name))
	return full_name

def display_entry(alias, name, email):
	print("Converting %s (%s) <%s>." % (name, alias, email))

def write_address_header():
	""" Print title line """ 
	## LDIF file for import into GMX web email client ##\n\n")
	output.write("# This LDIF file was generated by Python script to make a GMX.com contact list.\n")
	output.write("version: 1\n\n")

def write_address_record(alias, first, last, email):
	fullname = get_fullname(first, last)
	timestamp = get_timestamp()

	output.write("dn: cn=%s,mail=%s\n" % (fullname, email))
	output.write("mail: %s\n" % email)
	output.write("description: This is a note\n")
	output.write("mozillaNickname: %s\n" % alias)
	output.write("mozillaHomeUrl: https://www.example.net\n")
	output.write("sn: %s\n" % last)
	output.write("cn: %s\n" % fullname)
	output.write("title: ???\n")
	output.write("homePhone: nnn-nnn-nnnn\n")
	output.write("givenName: %s\n" % first)
	output.write("objectclass: top\n")
	output.write("objectclass: person\n")
	output.write("objectclass: organizationalPerson\n")
	output.write("objectclass: inetOrgPerson\n")
	output.write("objectclass: mozillaAbPersonAlpha\n")
	output.write("company: Stardust Data Networks\n")
	output.write("mobile: nnn-nnn-nnnn\n")
	output.write("modifytimestamp: %s\n" % timestamp)
	output.write("\n")

def process_line(aline):
	pos1 = pos2 = 0
	first = last = ""

	aline = aline.rstrip("\n")
	list = aline.split(" = ", -1)

	alias = list[0]
	name = list[1]
	email = list[2]

	pos1 = name.find(',')               # search for a comma
	pos2 = name.find(';')               # search for a semicolon
	#print "comma at '%d'; semicolon at '%d'" % (pos1, pos2)

	if (pos1 > 0) :
		name = delete_comment(name, pos1)

	if (pos2 > 0) :
		first = get_firstname(name, pos2)
		last = get_lastname(name, pos2)
		name = get_fullname(first, last)

	#display_entry(alias, name, email)				# display progress
	write_address_record(alias, first, last, email)	# write single entry


###-------------------- Main Routine --------------------###

global recCount

home = get_home_dir()

elm = os.sep.join((home, ".elm", "aliases.text"))
abook = os.sep.join((home, "GMX_Contacts.ldif"))

print("The Elm mail alias file is %s." % elm)
print("The export address book file is %s." % abook)
print("")

input = open(elm, 'r')
output = open(abook, 'w')

recCount = 0
write_address_header()
for line in input.readlines():
	recCount += 1
	process_line(line)

input.close() 
output.close()

print("The total records are %d\n" % recCount)

print("Conversion completed.")

# End of Program
